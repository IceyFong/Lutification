// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Mem2Stream_Batch12 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY,
        m_axi_in_V_AWADDR,
        m_axi_in_V_AWID,
        m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID,
        m_axi_in_V_WREADY,
        m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST,
        m_axi_in_V_WID,
        m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR,
        m_axi_in_V_ARID,
        m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID,
        m_axi_in_V_RREADY,
        m_axi_in_V_RDATA,
        m_axi_in_V_RLAST,
        m_axi_in_V_RID,
        m_axi_in_V_RUSER,
        m_axi_in_V_RRESP,
        m_axi_in_V_BVALID,
        m_axi_in_V_BREADY,
        m_axi_in_V_BRESP,
        m_axi_in_V_BID,
        m_axi_in_V_BUSER,
        in_V1,
        memInStrm_V_V_din,
        memInStrm_V_V_full_n,
        memInStrm_V_V_write,
        numReps,
        numReps_channel_din,
        numReps_channel_full_n,
        numReps_channel_write,
        out_V3,
        out_V3_out_din,
        out_V3_out_full_n,
        out_V3_out_write
);

parameter    ap_ST_fsm_state1 = 9'b1;
parameter    ap_ST_fsm_state2 = 9'b10;
parameter    ap_ST_fsm_state3 = 9'b100;
parameter    ap_ST_fsm_state4 = 9'b1000;
parameter    ap_ST_fsm_state5 = 9'b10000;
parameter    ap_ST_fsm_state6 = 9'b100000;
parameter    ap_ST_fsm_state7 = 9'b1000000;
parameter    ap_ST_fsm_state8 = 9'b10000000;
parameter    ap_ST_fsm_state9 = 9'b100000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_10 = 32'b10000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   m_axi_in_V_AWVALID;
input   m_axi_in_V_AWREADY;
output  [63:0] m_axi_in_V_AWADDR;
output  [0:0] m_axi_in_V_AWID;
output  [31:0] m_axi_in_V_AWLEN;
output  [2:0] m_axi_in_V_AWSIZE;
output  [1:0] m_axi_in_V_AWBURST;
output  [1:0] m_axi_in_V_AWLOCK;
output  [3:0] m_axi_in_V_AWCACHE;
output  [2:0] m_axi_in_V_AWPROT;
output  [3:0] m_axi_in_V_AWQOS;
output  [3:0] m_axi_in_V_AWREGION;
output  [0:0] m_axi_in_V_AWUSER;
output   m_axi_in_V_WVALID;
input   m_axi_in_V_WREADY;
output  [63:0] m_axi_in_V_WDATA;
output  [7:0] m_axi_in_V_WSTRB;
output   m_axi_in_V_WLAST;
output  [0:0] m_axi_in_V_WID;
output  [0:0] m_axi_in_V_WUSER;
output   m_axi_in_V_ARVALID;
input   m_axi_in_V_ARREADY;
output  [63:0] m_axi_in_V_ARADDR;
output  [0:0] m_axi_in_V_ARID;
output  [31:0] m_axi_in_V_ARLEN;
output  [2:0] m_axi_in_V_ARSIZE;
output  [1:0] m_axi_in_V_ARBURST;
output  [1:0] m_axi_in_V_ARLOCK;
output  [3:0] m_axi_in_V_ARCACHE;
output  [2:0] m_axi_in_V_ARPROT;
output  [3:0] m_axi_in_V_ARQOS;
output  [3:0] m_axi_in_V_ARREGION;
output  [0:0] m_axi_in_V_ARUSER;
input   m_axi_in_V_RVALID;
output   m_axi_in_V_RREADY;
input  [63:0] m_axi_in_V_RDATA;
input   m_axi_in_V_RLAST;
input  [0:0] m_axi_in_V_RID;
input  [0:0] m_axi_in_V_RUSER;
input  [1:0] m_axi_in_V_RRESP;
input   m_axi_in_V_BVALID;
output   m_axi_in_V_BREADY;
input  [1:0] m_axi_in_V_BRESP;
input  [0:0] m_axi_in_V_BID;
input  [0:0] m_axi_in_V_BUSER;
input  [60:0] in_V1;
output  [63:0] memInStrm_V_V_din;
input   memInStrm_V_V_full_n;
output   memInStrm_V_V_write;
input  [31:0] numReps;
output  [31:0] numReps_channel_din;
input   numReps_channel_full_n;
output   numReps_channel_write;
input  [60:0] out_V3;
output  [60:0] out_V3_out_din;
input   out_V3_out_full_n;
output   out_V3_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_in_V_ARVALID;
reg[63:0] m_axi_in_V_ARADDR;
reg[0:0] m_axi_in_V_ARID;
reg[31:0] m_axi_in_V_ARLEN;
reg[2:0] m_axi_in_V_ARSIZE;
reg[1:0] m_axi_in_V_ARBURST;
reg[1:0] m_axi_in_V_ARLOCK;
reg[3:0] m_axi_in_V_ARCACHE;
reg[2:0] m_axi_in_V_ARPROT;
reg[3:0] m_axi_in_V_ARQOS;
reg[3:0] m_axi_in_V_ARREGION;
reg[0:0] m_axi_in_V_ARUSER;
reg m_axi_in_V_RREADY;
reg[63:0] memInStrm_V_V_din;
reg memInStrm_V_V_write;
reg numReps_channel_write;
reg out_V3_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    numReps_channel_blk_n;
reg    out_V3_out_blk_n;
reg    ap_condition_119;
reg  signed [31:0] rep_load_reg_186;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_4_i_i_i_i_fu_134_p2;
reg   [0:0] tmp_4_i_i_i_i_reg_196;
wire   [0:0] tmp_i_i_i_i_fu_120_p2;
wire   [31:0] grp_fu_140_p2;
reg   [31:0] tmp_5_i_i_i_i_reg_200;
wire   [0:0] ap_CS_fsm_state6;
wire    grp_Mem2Stream_1_fu_92_ap_start;
wire    grp_Mem2Stream_1_fu_92_ap_done;
wire    grp_Mem2Stream_1_fu_92_ap_idle;
wire    grp_Mem2Stream_1_fu_92_ap_ready;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_AWVALID;
wire   [63:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWADDR;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWID;
wire   [31:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLEN;
wire   [2:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWSIZE;
wire   [1:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWBURST;
wire   [1:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLOCK;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWCACHE;
wire   [2:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWPROT;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWQOS;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWREGION;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_AWUSER;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_WVALID;
wire   [63:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_WDATA;
wire   [7:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_WSTRB;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_WLAST;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_WID;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_WUSER;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID;
wire   [63:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID;
wire   [31:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN;
wire   [2:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE;
wire   [1:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST;
wire   [1:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE;
wire   [2:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS;
wire   [3:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION;
wire   [0:0] grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY;
wire    grp_Mem2Stream_1_fu_92_m_axi_in_V_BREADY;
wire   [63:0] grp_Mem2Stream_1_fu_92_out_V_V_din;
wire    grp_Mem2Stream_1_fu_92_out_V_V_write;
wire    grp_Mem2Stream_fu_102_ap_start;
wire    grp_Mem2Stream_fu_102_ap_done;
wire    grp_Mem2Stream_fu_102_ap_idle;
wire    grp_Mem2Stream_fu_102_ap_ready;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_AWVALID;
wire   [63:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWADDR;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWID;
wire   [31:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWLEN;
wire   [2:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWSIZE;
wire   [1:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWBURST;
wire   [1:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWLOCK;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWCACHE;
wire   [2:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWPROT;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWQOS;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWREGION;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_AWUSER;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_WVALID;
wire   [63:0] grp_Mem2Stream_fu_102_m_axi_in_V_WDATA;
wire   [7:0] grp_Mem2Stream_fu_102_m_axi_in_V_WSTRB;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_WLAST;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_WID;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_WUSER;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID;
wire   [63:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARID;
wire   [31:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN;
wire   [2:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE;
wire   [1:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST;
wire   [1:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE;
wire   [2:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS;
wire   [3:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION;
wire   [0:0] grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_RREADY;
wire    grp_Mem2Stream_fu_102_m_axi_in_V_BREADY;
wire   [63:0] grp_Mem2Stream_fu_102_out_V_V_din;
wire    grp_Mem2Stream_fu_102_out_V_V_write;
reg    ap_reg_grp_Mem2Stream_1_fu_92_ap_start;
wire   [0:0] ap_CS_fsm_state9;
wire   [0:0] ap_CS_fsm_state8;
reg    ap_reg_grp_Mem2Stream_fu_102_ap_start;
wire   [0:0] ap_CS_fsm_state7;
reg  signed [31:0] rep_fu_54;
wire   [31:0] rep_4_fu_146_p2;
wire   [31:0] rep_3_fu_156_p2;
wire  signed [31:0] tmp_i_i_i_i_fu_120_p0;
wire  signed [31:0] repsLeft_fu_125_p1;
wire   [31:0] repsLeft_fu_125_p2;
wire   [3:0] tmp_fu_130_p1;
wire   [4:0] grp_fu_140_p0;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'b1;
#0 ap_reg_grp_Mem2Stream_1_fu_92_ap_start = 1'b0;
#0 ap_reg_grp_Mem2Stream_fu_102_ap_start = 1'b0;
end

Mem2Stream_1 grp_Mem2Stream_1_fu_92(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mem2Stream_1_fu_92_ap_start),
    .ap_done(grp_Mem2Stream_1_fu_92_ap_done),
    .ap_idle(grp_Mem2Stream_1_fu_92_ap_idle),
    .ap_ready(grp_Mem2Stream_1_fu_92_ap_ready),
    .m_axi_in_V_AWVALID(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(grp_Mem2Stream_1_fu_92_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(grp_Mem2Stream_1_fu_92_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(grp_Mem2Stream_1_fu_92_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(grp_Mem2Stream_1_fu_92_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(grp_Mem2Stream_1_fu_92_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(grp_Mem2Stream_1_fu_92_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(grp_Mem2Stream_1_fu_92_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(m_axi_in_V_ARREADY),
    .m_axi_in_V_ARADDR(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(m_axi_in_V_RVALID),
    .m_axi_in_V_RREADY(grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(m_axi_in_V_RDATA),
    .m_axi_in_V_RLAST(m_axi_in_V_RLAST),
    .m_axi_in_V_RID(m_axi_in_V_RID),
    .m_axi_in_V_RUSER(m_axi_in_V_RUSER),
    .m_axi_in_V_RRESP(m_axi_in_V_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(grp_Mem2Stream_1_fu_92_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(ap_const_lv2_0),
    .m_axi_in_V_BID(1'b0),
    .m_axi_in_V_BUSER(1'b0),
    .in_V1(in_V1),
    .tmp_6(tmp_5_i_i_i_i_reg_200),
    .out_V_V_din(grp_Mem2Stream_1_fu_92_out_V_V_din),
    .out_V_V_full_n(memInStrm_V_V_full_n),
    .out_V_V_write(grp_Mem2Stream_1_fu_92_out_V_V_write)
);

Mem2Stream grp_Mem2Stream_fu_102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Mem2Stream_fu_102_ap_start),
    .ap_done(grp_Mem2Stream_fu_102_ap_done),
    .ap_idle(grp_Mem2Stream_fu_102_ap_idle),
    .ap_ready(grp_Mem2Stream_fu_102_ap_ready),
    .m_axi_in_V_AWVALID(grp_Mem2Stream_fu_102_m_axi_in_V_AWVALID),
    .m_axi_in_V_AWREADY(1'b0),
    .m_axi_in_V_AWADDR(grp_Mem2Stream_fu_102_m_axi_in_V_AWADDR),
    .m_axi_in_V_AWID(grp_Mem2Stream_fu_102_m_axi_in_V_AWID),
    .m_axi_in_V_AWLEN(grp_Mem2Stream_fu_102_m_axi_in_V_AWLEN),
    .m_axi_in_V_AWSIZE(grp_Mem2Stream_fu_102_m_axi_in_V_AWSIZE),
    .m_axi_in_V_AWBURST(grp_Mem2Stream_fu_102_m_axi_in_V_AWBURST),
    .m_axi_in_V_AWLOCK(grp_Mem2Stream_fu_102_m_axi_in_V_AWLOCK),
    .m_axi_in_V_AWCACHE(grp_Mem2Stream_fu_102_m_axi_in_V_AWCACHE),
    .m_axi_in_V_AWPROT(grp_Mem2Stream_fu_102_m_axi_in_V_AWPROT),
    .m_axi_in_V_AWQOS(grp_Mem2Stream_fu_102_m_axi_in_V_AWQOS),
    .m_axi_in_V_AWREGION(grp_Mem2Stream_fu_102_m_axi_in_V_AWREGION),
    .m_axi_in_V_AWUSER(grp_Mem2Stream_fu_102_m_axi_in_V_AWUSER),
    .m_axi_in_V_WVALID(grp_Mem2Stream_fu_102_m_axi_in_V_WVALID),
    .m_axi_in_V_WREADY(1'b0),
    .m_axi_in_V_WDATA(grp_Mem2Stream_fu_102_m_axi_in_V_WDATA),
    .m_axi_in_V_WSTRB(grp_Mem2Stream_fu_102_m_axi_in_V_WSTRB),
    .m_axi_in_V_WLAST(grp_Mem2Stream_fu_102_m_axi_in_V_WLAST),
    .m_axi_in_V_WID(grp_Mem2Stream_fu_102_m_axi_in_V_WID),
    .m_axi_in_V_WUSER(grp_Mem2Stream_fu_102_m_axi_in_V_WUSER),
    .m_axi_in_V_ARVALID(grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID),
    .m_axi_in_V_ARREADY(m_axi_in_V_ARREADY),
    .m_axi_in_V_ARADDR(grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR),
    .m_axi_in_V_ARID(grp_Mem2Stream_fu_102_m_axi_in_V_ARID),
    .m_axi_in_V_ARLEN(grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN),
    .m_axi_in_V_ARSIZE(grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE),
    .m_axi_in_V_ARBURST(grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST),
    .m_axi_in_V_ARLOCK(grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK),
    .m_axi_in_V_ARCACHE(grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE),
    .m_axi_in_V_ARPROT(grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT),
    .m_axi_in_V_ARQOS(grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS),
    .m_axi_in_V_ARREGION(grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION),
    .m_axi_in_V_ARUSER(grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER),
    .m_axi_in_V_RVALID(m_axi_in_V_RVALID),
    .m_axi_in_V_RREADY(grp_Mem2Stream_fu_102_m_axi_in_V_RREADY),
    .m_axi_in_V_RDATA(m_axi_in_V_RDATA),
    .m_axi_in_V_RLAST(m_axi_in_V_RLAST),
    .m_axi_in_V_RID(m_axi_in_V_RID),
    .m_axi_in_V_RUSER(m_axi_in_V_RUSER),
    .m_axi_in_V_RRESP(m_axi_in_V_RRESP),
    .m_axi_in_V_BVALID(1'b0),
    .m_axi_in_V_BREADY(grp_Mem2Stream_fu_102_m_axi_in_V_BREADY),
    .m_axi_in_V_BRESP(ap_const_lv2_0),
    .m_axi_in_V_BID(1'b0),
    .m_axi_in_V_BUSER(1'b0),
    .in_V1(in_V1),
    .tmp_8(tmp_5_i_i_i_i_reg_200),
    .out_V_V_din(grp_Mem2Stream_fu_102_out_V_V_din),
    .out_V_V_full_n(memInStrm_V_V_full_n),
    .out_V_V_write(grp_Mem2Stream_fu_102_out_V_V_write)
);

BlackBoxJam_mul_5bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
BlackBoxJam_mul_5bkb_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_140_p0),
    .din1(rep_fu_54),
    .ce(1'b1),
    .dout(grp_fu_140_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_i_fu_120_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Mem2Stream_1_fu_92_ap_ready)) begin
            ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Mem2Stream_fu_102_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_reg_grp_Mem2Stream_fu_102_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Mem2Stream_fu_102_ap_ready)) begin
            ap_reg_grp_Mem2Stream_fu_102_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & ~(1'b0 == tmp_4_i_i_i_i_reg_196))) begin
        rep_fu_54 <= rep_3_fu_156_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == tmp_4_i_i_i_i_reg_196))) begin
        rep_fu_54 <= rep_4_fu_146_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_119 == 1'b1))) begin
        rep_fu_54 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rep_load_reg_186 <= rep_fu_54;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_i_fu_120_p2))) begin
        tmp_4_i_i_i_i_reg_196 <= tmp_4_i_i_i_i_fu_134_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_5_i_i_i_i_reg_200 <= grp_fu_140_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_i_fu_120_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_i_fu_120_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARADDR = grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARADDR = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR;
    end else begin
        m_axi_in_V_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARBURST = grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARBURST = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST;
    end else begin
        m_axi_in_V_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARCACHE = grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARCACHE = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE;
    end else begin
        m_axi_in_V_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARID = grp_Mem2Stream_fu_102_m_axi_in_V_ARID;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARID = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID;
    end else begin
        m_axi_in_V_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARLEN = grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARLEN = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN;
    end else begin
        m_axi_in_V_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARLOCK = grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARLOCK = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK;
    end else begin
        m_axi_in_V_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARPROT = grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARPROT = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT;
    end else begin
        m_axi_in_V_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARQOS = grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARQOS = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS;
    end else begin
        m_axi_in_V_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARREGION = grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARREGION = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION;
    end else begin
        m_axi_in_V_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARSIZE = grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARSIZE = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE;
    end else begin
        m_axi_in_V_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARUSER = grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARUSER = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER;
    end else begin
        m_axi_in_V_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARVALID = grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_ARVALID = grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID;
    end else begin
        m_axi_in_V_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_RREADY = grp_Mem2Stream_fu_102_m_axi_in_V_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((1'b1 == ap_CS_fsm_state8) & ~(1'b0 == tmp_4_i_i_i_i_reg_196)))) begin
        m_axi_in_V_RREADY = grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY;
    end else begin
        m_axi_in_V_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((1'b0 == tmp_4_i_i_i_i_reg_196)) begin
            memInStrm_V_V_din = grp_Mem2Stream_fu_102_out_V_V_din;
        end else if (~(1'b0 == tmp_4_i_i_i_i_reg_196)) begin
            memInStrm_V_V_din = grp_Mem2Stream_1_fu_92_out_V_V_din;
        end else begin
            memInStrm_V_V_din = grp_Mem2Stream_fu_102_out_V_V_din;
        end
    end else begin
        memInStrm_V_V_din = grp_Mem2Stream_fu_102_out_V_V_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        if ((1'b0 == tmp_4_i_i_i_i_reg_196)) begin
            memInStrm_V_V_write = grp_Mem2Stream_fu_102_out_V_V_write;
        end else if (~(1'b0 == tmp_4_i_i_i_i_reg_196)) begin
            memInStrm_V_V_write = grp_Mem2Stream_1_fu_92_out_V_V_write;
        end else begin
            memInStrm_V_V_write = 1'b0;
        end
    end else begin
        memInStrm_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        numReps_channel_blk_n = numReps_channel_full_n;
    end else begin
        numReps_channel_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_119 == 1'b1))) begin
        numReps_channel_write = 1'b1;
    end else begin
        numReps_channel_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_V3_out_blk_n = out_V3_out_full_n;
    end else begin
        out_V3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_119 == 1'b1))) begin
        out_V3_out_write = 1'b1;
    end else begin
        out_V3_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_condition_119 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == tmp_i_i_i_i_fu_120_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (~(1'b0 == tmp_4_i_i_i_i_reg_196)) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (~(((1'b0 == tmp_4_i_i_i_i_reg_196) & (1'b0 == grp_Mem2Stream_fu_102_ap_done)) | (~(1'b0 == tmp_4_i_i_i_i_reg_196) & (1'b0 == grp_Mem2Stream_1_fu_92_ap_done)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

always @ (*) begin
    ap_condition_119 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (out_V3_out_full_n == 1'b0) | (numReps_channel_full_n == 1'b0));
end

assign grp_Mem2Stream_1_fu_92_ap_start = ap_reg_grp_Mem2Stream_1_fu_92_ap_start;

assign grp_Mem2Stream_fu_102_ap_start = ap_reg_grp_Mem2Stream_fu_102_ap_start;

assign grp_fu_140_p0 = ap_const_lv32_D;

assign m_axi_in_V_AWADDR = ap_const_lv64_0;

assign m_axi_in_V_AWBURST = ap_const_lv2_0;

assign m_axi_in_V_AWCACHE = ap_const_lv4_0;

assign m_axi_in_V_AWID = 1'b0;

assign m_axi_in_V_AWLEN = ap_const_lv32_0;

assign m_axi_in_V_AWLOCK = ap_const_lv2_0;

assign m_axi_in_V_AWPROT = ap_const_lv3_0;

assign m_axi_in_V_AWQOS = ap_const_lv4_0;

assign m_axi_in_V_AWREGION = ap_const_lv4_0;

assign m_axi_in_V_AWSIZE = ap_const_lv3_0;

assign m_axi_in_V_AWUSER = 1'b0;

assign m_axi_in_V_AWVALID = 1'b0;

assign m_axi_in_V_BREADY = 1'b0;

assign m_axi_in_V_WDATA = ap_const_lv64_0;

assign m_axi_in_V_WID = 1'b0;

assign m_axi_in_V_WLAST = 1'b0;

assign m_axi_in_V_WSTRB = ap_const_lv8_0;

assign m_axi_in_V_WUSER = 1'b0;

assign m_axi_in_V_WVALID = 1'b0;

assign numReps_channel_din = numReps;

assign out_V3_out_din = out_V3;

assign rep_3_fu_156_p2 = ($signed(rep_load_reg_186) + $signed(ap_const_lv32_10));

assign rep_4_fu_146_p2 = ($signed(rep_load_reg_186) + $signed(ap_const_lv32_1));

assign repsLeft_fu_125_p1 = rep_fu_54;

assign repsLeft_fu_125_p2 = ($signed(numReps) - $signed(repsLeft_fu_125_p1));

assign tmp_4_i_i_i_i_fu_134_p2 = ((tmp_fu_130_p1 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_fu_130_p1 = repsLeft_fu_125_p2[3:0];

assign tmp_i_i_i_i_fu_120_p0 = rep_fu_54;

assign tmp_i_i_i_i_fu_120_p2 = ((tmp_i_i_i_i_fu_120_p0 == numReps) ? 1'b1 : 1'b0);

endmodule //Mem2Stream_Batch12
