-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.3
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Mem2Stream_Batch12 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_in_V_AWVALID : OUT STD_LOGIC;
    m_axi_in_V_AWREADY : IN STD_LOGIC;
    m_axi_in_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_in_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_in_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_in_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_in_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_WVALID : OUT STD_LOGIC;
    m_axi_in_V_WREADY : IN STD_LOGIC;
    m_axi_in_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_in_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_in_V_WLAST : OUT STD_LOGIC;
    m_axi_in_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_ARVALID : OUT STD_LOGIC;
    m_axi_in_V_ARREADY : IN STD_LOGIC;
    m_axi_in_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_in_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_in_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_in_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_in_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_in_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_RVALID : IN STD_LOGIC;
    m_axi_in_V_RREADY : OUT STD_LOGIC;
    m_axi_in_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_in_V_RLAST : IN STD_LOGIC;
    m_axi_in_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_BVALID : IN STD_LOGIC;
    m_axi_in_V_BREADY : OUT STD_LOGIC;
    m_axi_in_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_in_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_in_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_V1 : IN STD_LOGIC_VECTOR (60 downto 0);
    memInStrm_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    memInStrm_V_V_full_n : IN STD_LOGIC;
    memInStrm_V_V_write : OUT STD_LOGIC;
    numReps : IN STD_LOGIC_VECTOR (31 downto 0);
    numReps_channel_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    numReps_channel_full_n : IN STD_LOGIC;
    numReps_channel_write : OUT STD_LOGIC;
    out_V3 : IN STD_LOGIC_VECTOR (60 downto 0);
    out_V3_out_din : OUT STD_LOGIC_VECTOR (60 downto 0);
    out_V3_out_full_n : IN STD_LOGIC;
    out_V3_out_write : OUT STD_LOGIC );
end;


architecture behav of Mem2Stream_Batch12 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal numReps_channel_blk_n : STD_LOGIC;
    signal out_V3_out_blk_n : STD_LOGIC;
    signal ap_condition_119 : BOOLEAN;
    signal rep_load_reg_186 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_4_i_i_i_i_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_i_i_i_i_reg_196 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_i_i_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_140_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_i_i_i_i_reg_200 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_Mem2Stream_1_fu_92_ap_start : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_ap_done : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_ap_idle : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_ap_ready : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWVALID : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WVALID : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WLAST : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_m_axi_in_V_BREADY : STD_LOGIC;
    signal grp_Mem2Stream_1_fu_92_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_1_fu_92_out_V_V_write : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_ap_start : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_ap_done : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_ap_idle : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_ap_ready : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWVALID : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WVALID : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WLAST : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Mem2Stream_fu_102_m_axi_in_V_RREADY : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_m_axi_in_V_BREADY : STD_LOGIC;
    signal grp_Mem2Stream_fu_102_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Mem2Stream_fu_102_out_V_V_write : STD_LOGIC;
    signal ap_reg_grp_Mem2Stream_1_fu_92_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_reg_grp_Mem2Stream_fu_102_ap_start : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC_VECTOR (0 downto 0);
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal rep_fu_54 : STD_LOGIC_VECTOR (31 downto 0);
    signal rep_4_fu_146_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rep_3_fu_156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_i_i_fu_120_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal repsLeft_fu_125_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal repsLeft_fu_125_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_130_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_140_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);

    component Mem2Stream_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_in_V_AWVALID : OUT STD_LOGIC;
        m_axi_in_V_AWREADY : IN STD_LOGIC;
        m_axi_in_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WVALID : OUT STD_LOGIC;
        m_axi_in_V_WREADY : IN STD_LOGIC;
        m_axi_in_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_in_V_WLAST : OUT STD_LOGIC;
        m_axi_in_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARVALID : OUT STD_LOGIC;
        m_axi_in_V_ARREADY : IN STD_LOGIC;
        m_axi_in_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RVALID : IN STD_LOGIC;
        m_axi_in_V_RREADY : OUT STD_LOGIC;
        m_axi_in_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_RLAST : IN STD_LOGIC;
        m_axi_in_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BVALID : IN STD_LOGIC;
        m_axi_in_V_BREADY : OUT STD_LOGIC;
        m_axi_in_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_V1 : IN STD_LOGIC_VECTOR (60 downto 0);
        tmp_6 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component Mem2Stream IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_in_V_AWVALID : OUT STD_LOGIC;
        m_axi_in_V_AWREADY : IN STD_LOGIC;
        m_axi_in_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WVALID : OUT STD_LOGIC;
        m_axi_in_V_WREADY : IN STD_LOGIC;
        m_axi_in_V_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_in_V_WLAST : OUT STD_LOGIC;
        m_axi_in_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARVALID : OUT STD_LOGIC;
        m_axi_in_V_ARREADY : IN STD_LOGIC;
        m_axi_in_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_in_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_in_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_in_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RVALID : IN STD_LOGIC;
        m_axi_in_V_RREADY : OUT STD_LOGIC;
        m_axi_in_V_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_in_V_RLAST : IN STD_LOGIC;
        m_axi_in_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BVALID : IN STD_LOGIC;
        m_axi_in_V_BREADY : OUT STD_LOGIC;
        m_axi_in_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_in_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_in_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        in_V1 : IN STD_LOGIC_VECTOR (60 downto 0);
        tmp_8 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_V_V_full_n : IN STD_LOGIC;
        out_V_V_write : OUT STD_LOGIC );
    end component;


    component BlackBoxJam_mul_5bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_Mem2Stream_1_fu_92 : component Mem2Stream_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Mem2Stream_1_fu_92_ap_start,
        ap_done => grp_Mem2Stream_1_fu_92_ap_done,
        ap_idle => grp_Mem2Stream_1_fu_92_ap_idle,
        ap_ready => grp_Mem2Stream_1_fu_92_ap_ready,
        m_axi_in_V_AWVALID => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY => ap_const_logic_0,
        m_axi_in_V_AWADDR => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWADDR,
        m_axi_in_V_AWID => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWID,
        m_axi_in_V_AWLEN => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER => grp_Mem2Stream_1_fu_92_m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID => grp_Mem2Stream_1_fu_92_m_axi_in_V_WVALID,
        m_axi_in_V_WREADY => ap_const_logic_0,
        m_axi_in_V_WDATA => grp_Mem2Stream_1_fu_92_m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB => grp_Mem2Stream_1_fu_92_m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST => grp_Mem2Stream_1_fu_92_m_axi_in_V_WLAST,
        m_axi_in_V_WID => grp_Mem2Stream_1_fu_92_m_axi_in_V_WID,
        m_axi_in_V_WUSER => grp_Mem2Stream_1_fu_92_m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY => m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR,
        m_axi_in_V_ARID => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID,
        m_axi_in_V_ARLEN => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER => grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID => m_axi_in_V_RVALID,
        m_axi_in_V_RREADY => grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY,
        m_axi_in_V_RDATA => m_axi_in_V_RDATA,
        m_axi_in_V_RLAST => m_axi_in_V_RLAST,
        m_axi_in_V_RID => m_axi_in_V_RID,
        m_axi_in_V_RUSER => m_axi_in_V_RUSER,
        m_axi_in_V_RRESP => m_axi_in_V_RRESP,
        m_axi_in_V_BVALID => ap_const_logic_0,
        m_axi_in_V_BREADY => grp_Mem2Stream_1_fu_92_m_axi_in_V_BREADY,
        m_axi_in_V_BRESP => ap_const_lv2_0,
        m_axi_in_V_BID => ap_const_lv1_0,
        m_axi_in_V_BUSER => ap_const_lv1_0,
        in_V1 => in_V1,
        tmp_6 => tmp_5_i_i_i_i_reg_200,
        out_V_V_din => grp_Mem2Stream_1_fu_92_out_V_V_din,
        out_V_V_full_n => memInStrm_V_V_full_n,
        out_V_V_write => grp_Mem2Stream_1_fu_92_out_V_V_write);

    grp_Mem2Stream_fu_102 : component Mem2Stream
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Mem2Stream_fu_102_ap_start,
        ap_done => grp_Mem2Stream_fu_102_ap_done,
        ap_idle => grp_Mem2Stream_fu_102_ap_idle,
        ap_ready => grp_Mem2Stream_fu_102_ap_ready,
        m_axi_in_V_AWVALID => grp_Mem2Stream_fu_102_m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY => ap_const_logic_0,
        m_axi_in_V_AWADDR => grp_Mem2Stream_fu_102_m_axi_in_V_AWADDR,
        m_axi_in_V_AWID => grp_Mem2Stream_fu_102_m_axi_in_V_AWID,
        m_axi_in_V_AWLEN => grp_Mem2Stream_fu_102_m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE => grp_Mem2Stream_fu_102_m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST => grp_Mem2Stream_fu_102_m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK => grp_Mem2Stream_fu_102_m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE => grp_Mem2Stream_fu_102_m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT => grp_Mem2Stream_fu_102_m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS => grp_Mem2Stream_fu_102_m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION => grp_Mem2Stream_fu_102_m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER => grp_Mem2Stream_fu_102_m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID => grp_Mem2Stream_fu_102_m_axi_in_V_WVALID,
        m_axi_in_V_WREADY => ap_const_logic_0,
        m_axi_in_V_WDATA => grp_Mem2Stream_fu_102_m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB => grp_Mem2Stream_fu_102_m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST => grp_Mem2Stream_fu_102_m_axi_in_V_WLAST,
        m_axi_in_V_WID => grp_Mem2Stream_fu_102_m_axi_in_V_WID,
        m_axi_in_V_WUSER => grp_Mem2Stream_fu_102_m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID => grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY => m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR => grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR,
        m_axi_in_V_ARID => grp_Mem2Stream_fu_102_m_axi_in_V_ARID,
        m_axi_in_V_ARLEN => grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE => grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST => grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK => grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE => grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT => grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS => grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION => grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER => grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID => m_axi_in_V_RVALID,
        m_axi_in_V_RREADY => grp_Mem2Stream_fu_102_m_axi_in_V_RREADY,
        m_axi_in_V_RDATA => m_axi_in_V_RDATA,
        m_axi_in_V_RLAST => m_axi_in_V_RLAST,
        m_axi_in_V_RID => m_axi_in_V_RID,
        m_axi_in_V_RUSER => m_axi_in_V_RUSER,
        m_axi_in_V_RRESP => m_axi_in_V_RRESP,
        m_axi_in_V_BVALID => ap_const_logic_0,
        m_axi_in_V_BREADY => grp_Mem2Stream_fu_102_m_axi_in_V_BREADY,
        m_axi_in_V_BRESP => ap_const_lv2_0,
        m_axi_in_V_BID => ap_const_lv1_0,
        m_axi_in_V_BUSER => ap_const_lv1_0,
        in_V1 => in_V1,
        tmp_8 => tmp_5_i_i_i_i_reg_200,
        out_V_V_din => grp_Mem2Stream_fu_102_out_V_V_din,
        out_V_V_full_n => memInStrm_V_V_full_n,
        out_V_V_write => grp_Mem2Stream_fu_102_out_V_V_write);

    BlackBoxJam_mul_5bkb_U9 : component BlackBoxJam_mul_5bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 5,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_140_p0,
        din1 => rep_fu_54,
        ce => ap_const_logic_1,
        dout => grp_fu_140_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_i_i_fu_120_p2)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_Mem2Stream_1_fu_92_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state9))) then 
                    ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_Mem2Stream_1_fu_92_ap_ready)) then 
                    ap_reg_grp_Mem2Stream_1_fu_92_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_Mem2Stream_fu_102_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_grp_Mem2Stream_fu_102_ap_start <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = ap_CS_fsm_state7))) then 
                    ap_reg_grp_Mem2Stream_fu_102_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_Mem2Stream_fu_102_ap_ready)) then 
                    ap_reg_grp_Mem2Stream_fu_102_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rep_fu_54_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
                rep_fu_54 <= rep_3_fu_156_p2;
            elsif (((ap_const_lv1_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))) then 
                rep_fu_54 <= rep_4_fu_146_p2;
            elsif (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_119 = ap_const_boolean_1)))) then 
                rep_fu_54 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2))) then
                rep_load_reg_186 <= rep_fu_54;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_i_i_i_i_fu_120_p2))) then
                tmp_4_i_i_i_i_reg_196 <= tmp_4_i_i_i_i_fu_134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = ap_CS_fsm_state6))) then
                tmp_5_i_i_i_i_reg_200 <= grp_fu_140_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_condition_119, tmp_4_i_i_i_i_reg_196, tmp_i_i_i_i_fu_120_p2, grp_Mem2Stream_1_fu_92_ap_done, grp_Mem2Stream_fu_102_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (not((ap_condition_119 = ap_const_boolean_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (not((ap_const_lv1_0 = tmp_i_i_i_i_fu_120_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (not((((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196) and (ap_const_logic_0 = grp_Mem2Stream_fu_102_ap_done)) or (not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)) and (ap_const_logic_0 = grp_Mem2Stream_1_fu_92_ap_done))))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0 downto 0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1 downto 1);
    ap_CS_fsm_state6 <= ap_CS_fsm(5 downto 5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6 downto 6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7 downto 7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8 downto 8);

    ap_condition_119_assign_proc : process(ap_start, ap_done_reg, numReps_channel_full_n, out_V3_out_full_n)
    begin
                ap_condition_119 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (out_V3_out_full_n = ap_const_logic_0) or (numReps_channel_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, tmp_i_i_i_i_fu_120_p2)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_i_i_fu_120_p2))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_CS_fsm_state1 = ap_const_lv1_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_i_i_i_i_fu_120_p2)
    begin
        if (((ap_const_lv1_1 = ap_CS_fsm_state2) and not((ap_const_lv1_0 = tmp_i_i_i_i_fu_120_p2)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_Mem2Stream_1_fu_92_ap_start <= ap_reg_grp_Mem2Stream_1_fu_92_ap_start;
    grp_Mem2Stream_fu_102_ap_start <= ap_reg_grp_Mem2Stream_fu_102_ap_start;
    grp_fu_140_p0 <= ap_const_lv32_D(5 - 1 downto 0);

    m_axi_in_V_ARADDR_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR, grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARADDR <= grp_Mem2Stream_fu_102_m_axi_in_V_ARADDR;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARADDR <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARADDR;
        else 
            m_axi_in_V_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_in_V_ARBURST_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST, grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARBURST <= grp_Mem2Stream_fu_102_m_axi_in_V_ARBURST;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARBURST <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARBURST;
        else 
            m_axi_in_V_ARBURST <= "XX";
        end if; 
    end process;


    m_axi_in_V_ARCACHE_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE, grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARCACHE <= grp_Mem2Stream_fu_102_m_axi_in_V_ARCACHE;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARCACHE <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARCACHE;
        else 
            m_axi_in_V_ARCACHE <= "XXXX";
        end if; 
    end process;


    m_axi_in_V_ARID_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID, grp_Mem2Stream_fu_102_m_axi_in_V_ARID, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARID <= grp_Mem2Stream_fu_102_m_axi_in_V_ARID;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARID <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARID;
        else 
            m_axi_in_V_ARID <= "X";
        end if; 
    end process;


    m_axi_in_V_ARLEN_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN, grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARLEN <= grp_Mem2Stream_fu_102_m_axi_in_V_ARLEN;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARLEN <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLEN;
        else 
            m_axi_in_V_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_in_V_ARLOCK_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK, grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARLOCK <= grp_Mem2Stream_fu_102_m_axi_in_V_ARLOCK;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARLOCK <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARLOCK;
        else 
            m_axi_in_V_ARLOCK <= "XX";
        end if; 
    end process;


    m_axi_in_V_ARPROT_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT, grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARPROT <= grp_Mem2Stream_fu_102_m_axi_in_V_ARPROT;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARPROT <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARPROT;
        else 
            m_axi_in_V_ARPROT <= "XXX";
        end if; 
    end process;


    m_axi_in_V_ARQOS_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS, grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARQOS <= grp_Mem2Stream_fu_102_m_axi_in_V_ARQOS;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARQOS <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARQOS;
        else 
            m_axi_in_V_ARQOS <= "XXXX";
        end if; 
    end process;


    m_axi_in_V_ARREGION_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION, grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARREGION <= grp_Mem2Stream_fu_102_m_axi_in_V_ARREGION;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARREGION <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARREGION;
        else 
            m_axi_in_V_ARREGION <= "XXXX";
        end if; 
    end process;


    m_axi_in_V_ARSIZE_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE, grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARSIZE <= grp_Mem2Stream_fu_102_m_axi_in_V_ARSIZE;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARSIZE <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARSIZE;
        else 
            m_axi_in_V_ARSIZE <= "XXX";
        end if; 
    end process;


    m_axi_in_V_ARUSER_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER, grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARUSER <= grp_Mem2Stream_fu_102_m_axi_in_V_ARUSER;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARUSER <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARUSER;
        else 
            m_axi_in_V_ARUSER <= "X";
        end if; 
    end process;


    m_axi_in_V_ARVALID_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID, grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_ARVALID <= grp_Mem2Stream_fu_102_m_axi_in_V_ARVALID;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_ARVALID <= grp_Mem2Stream_1_fu_92_m_axi_in_V_ARVALID;
        else 
            m_axi_in_V_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_in_V_AWADDR <= ap_const_lv64_0;
    m_axi_in_V_AWBURST <= ap_const_lv2_0;
    m_axi_in_V_AWCACHE <= ap_const_lv4_0;
    m_axi_in_V_AWID <= ap_const_lv1_0;
    m_axi_in_V_AWLEN <= ap_const_lv32_0;
    m_axi_in_V_AWLOCK <= ap_const_lv2_0;
    m_axi_in_V_AWPROT <= ap_const_lv3_0;
    m_axi_in_V_AWQOS <= ap_const_lv4_0;
    m_axi_in_V_AWREGION <= ap_const_lv4_0;
    m_axi_in_V_AWSIZE <= ap_const_lv3_0;
    m_axi_in_V_AWUSER <= ap_const_lv1_0;
    m_axi_in_V_AWVALID <= ap_const_logic_0;
    m_axi_in_V_BREADY <= ap_const_logic_0;

    m_axi_in_V_RREADY_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY, grp_Mem2Stream_fu_102_m_axi_in_V_RREADY, ap_CS_fsm_state9, ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if ((((ap_const_lv1_1 = ap_CS_fsm_state7)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and (ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)))) then 
            m_axi_in_V_RREADY <= grp_Mem2Stream_fu_102_m_axi_in_V_RREADY;
        elsif ((((ap_const_lv1_1 = ap_CS_fsm_state9)) or ((ap_const_lv1_1 = ap_CS_fsm_state8) and not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))))) then 
            m_axi_in_V_RREADY <= grp_Mem2Stream_1_fu_92_m_axi_in_V_RREADY;
        else 
            m_axi_in_V_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_in_V_WDATA <= ap_const_lv64_0;
    m_axi_in_V_WID <= ap_const_lv1_0;
    m_axi_in_V_WLAST <= ap_const_logic_0;
    m_axi_in_V_WSTRB <= ap_const_lv8_0;
    m_axi_in_V_WUSER <= ap_const_lv1_0;
    m_axi_in_V_WVALID <= ap_const_logic_0;

    memInStrm_V_V_din_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_out_V_V_din, grp_Mem2Stream_fu_102_out_V_V_din, ap_CS_fsm_state8)
    begin
        if ((ap_const_lv1_1 = ap_CS_fsm_state8)) then
            if ((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)) then 
                memInStrm_V_V_din <= grp_Mem2Stream_fu_102_out_V_V_din;
            elsif (not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))) then 
                memInStrm_V_V_din <= grp_Mem2Stream_1_fu_92_out_V_V_din;
            else 
                memInStrm_V_V_din <= grp_Mem2Stream_fu_102_out_V_V_din;
            end if;
        else 
            memInStrm_V_V_din <= grp_Mem2Stream_fu_102_out_V_V_din;
        end if; 
    end process;


    memInStrm_V_V_write_assign_proc : process(tmp_4_i_i_i_i_reg_196, grp_Mem2Stream_1_fu_92_out_V_V_write, grp_Mem2Stream_fu_102_out_V_V_write, ap_CS_fsm_state8)
    begin
        if ((ap_const_lv1_1 = ap_CS_fsm_state8)) then
            if ((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196)) then 
                memInStrm_V_V_write <= grp_Mem2Stream_fu_102_out_V_V_write;
            elsif (not((ap_const_lv1_0 = tmp_4_i_i_i_i_reg_196))) then 
                memInStrm_V_V_write <= grp_Mem2Stream_1_fu_92_out_V_V_write;
            else 
                memInStrm_V_V_write <= ap_const_logic_0;
            end if;
        else 
            memInStrm_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    numReps_channel_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, numReps_channel_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            numReps_channel_blk_n <= numReps_channel_full_n;
        else 
            numReps_channel_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    numReps_channel_din <= numReps;

    numReps_channel_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_119)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_119 = ap_const_boolean_1)))) then 
            numReps_channel_write <= ap_const_logic_1;
        else 
            numReps_channel_write <= ap_const_logic_0;
        end if; 
    end process;


    out_V3_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_V3_out_full_n)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))))) then 
            out_V3_out_blk_n <= out_V3_out_full_n;
        else 
            out_V3_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_V3_out_din <= out_V3;

    out_V3_out_write_assign_proc : process(ap_CS_fsm_state1, ap_condition_119)
    begin
        if (((ap_CS_fsm_state1 = ap_const_lv1_1) and not((ap_condition_119 = ap_const_boolean_1)))) then 
            out_V3_out_write <= ap_const_logic_1;
        else 
            out_V3_out_write <= ap_const_logic_0;
        end if; 
    end process;

    rep_3_fu_156_p2 <= std_logic_vector(signed(rep_load_reg_186) + signed(ap_const_lv32_10));
    rep_4_fu_146_p2 <= std_logic_vector(signed(rep_load_reg_186) + signed(ap_const_lv32_1));
    repsLeft_fu_125_p1 <= rep_fu_54;
    repsLeft_fu_125_p2 <= std_logic_vector(unsigned(numReps) - unsigned(repsLeft_fu_125_p1));
    tmp_4_i_i_i_i_fu_134_p2 <= "1" when (tmp_fu_130_p1 = ap_const_lv4_0) else "0";
    tmp_fu_130_p1 <= repsLeft_fu_125_p2(4 - 1 downto 0);
    tmp_i_i_i_i_fu_120_p0 <= rep_fu_54;
    tmp_i_i_i_i_fu_120_p2 <= "1" when (tmp_i_i_i_i_fu_120_p0 = numReps) else "0";
end behav;
