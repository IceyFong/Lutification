// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Stream2Mem_Batch (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        memOutStrm_V_V_dout,
        memOutStrm_V_V_empty_n,
        memOutStrm_V_V_read,
        m_axi_in_V_AWVALID,
        m_axi_in_V_AWREADY,
        m_axi_in_V_AWADDR,
        m_axi_in_V_AWID,
        m_axi_in_V_AWLEN,
        m_axi_in_V_AWSIZE,
        m_axi_in_V_AWBURST,
        m_axi_in_V_AWLOCK,
        m_axi_in_V_AWCACHE,
        m_axi_in_V_AWPROT,
        m_axi_in_V_AWQOS,
        m_axi_in_V_AWREGION,
        m_axi_in_V_AWUSER,
        m_axi_in_V_WVALID,
        m_axi_in_V_WREADY,
        m_axi_in_V_WDATA,
        m_axi_in_V_WSTRB,
        m_axi_in_V_WLAST,
        m_axi_in_V_WID,
        m_axi_in_V_WUSER,
        m_axi_in_V_ARVALID,
        m_axi_in_V_ARREADY,
        m_axi_in_V_ARADDR,
        m_axi_in_V_ARID,
        m_axi_in_V_ARLEN,
        m_axi_in_V_ARSIZE,
        m_axi_in_V_ARBURST,
        m_axi_in_V_ARLOCK,
        m_axi_in_V_ARCACHE,
        m_axi_in_V_ARPROT,
        m_axi_in_V_ARQOS,
        m_axi_in_V_ARREGION,
        m_axi_in_V_ARUSER,
        m_axi_in_V_RVALID,
        m_axi_in_V_RREADY,
        m_axi_in_V_RDATA,
        m_axi_in_V_RLAST,
        m_axi_in_V_RID,
        m_axi_in_V_RUSER,
        m_axi_in_V_RRESP,
        m_axi_in_V_BVALID,
        m_axi_in_V_BREADY,
        m_axi_in_V_BRESP,
        m_axi_in_V_BID,
        m_axi_in_V_BUSER,
        out_V3_dout,
        out_V3_empty_n,
        out_V3_read,
        numReps_channel22_dout,
        numReps_channel22_empty_n,
        numReps_channel22_read
);

parameter    ap_ST_fsm_state1 = 11'b1;
parameter    ap_ST_fsm_state2 = 11'b10;
parameter    ap_ST_fsm_state3 = 11'b100;
parameter    ap_ST_fsm_state4 = 11'b1000;
parameter    ap_ST_fsm_state5 = 11'b10000;
parameter    ap_ST_fsm_state6 = 11'b100000;
parameter    ap_ST_fsm_state7 = 11'b1000000;
parameter    ap_ST_fsm_state8 = 11'b10000000;
parameter    ap_ST_fsm_state9 = 11'b100000000;
parameter    ap_ST_fsm_state10 = 11'b1000000000;
parameter    ap_ST_fsm_state11 = 11'b10000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [63:0] memOutStrm_V_V_dout;
input   memOutStrm_V_V_empty_n;
output   memOutStrm_V_V_read;
output   m_axi_in_V_AWVALID;
input   m_axi_in_V_AWREADY;
output  [63:0] m_axi_in_V_AWADDR;
output  [0:0] m_axi_in_V_AWID;
output  [31:0] m_axi_in_V_AWLEN;
output  [2:0] m_axi_in_V_AWSIZE;
output  [1:0] m_axi_in_V_AWBURST;
output  [1:0] m_axi_in_V_AWLOCK;
output  [3:0] m_axi_in_V_AWCACHE;
output  [2:0] m_axi_in_V_AWPROT;
output  [3:0] m_axi_in_V_AWQOS;
output  [3:0] m_axi_in_V_AWREGION;
output  [0:0] m_axi_in_V_AWUSER;
output   m_axi_in_V_WVALID;
input   m_axi_in_V_WREADY;
output  [63:0] m_axi_in_V_WDATA;
output  [7:0] m_axi_in_V_WSTRB;
output   m_axi_in_V_WLAST;
output  [0:0] m_axi_in_V_WID;
output  [0:0] m_axi_in_V_WUSER;
output   m_axi_in_V_ARVALID;
input   m_axi_in_V_ARREADY;
output  [63:0] m_axi_in_V_ARADDR;
output  [0:0] m_axi_in_V_ARID;
output  [31:0] m_axi_in_V_ARLEN;
output  [2:0] m_axi_in_V_ARSIZE;
output  [1:0] m_axi_in_V_ARBURST;
output  [1:0] m_axi_in_V_ARLOCK;
output  [3:0] m_axi_in_V_ARCACHE;
output  [2:0] m_axi_in_V_ARPROT;
output  [3:0] m_axi_in_V_ARQOS;
output  [3:0] m_axi_in_V_ARREGION;
output  [0:0] m_axi_in_V_ARUSER;
input   m_axi_in_V_RVALID;
output   m_axi_in_V_RREADY;
input  [63:0] m_axi_in_V_RDATA;
input   m_axi_in_V_RLAST;
input  [0:0] m_axi_in_V_RID;
input  [0:0] m_axi_in_V_RUSER;
input  [1:0] m_axi_in_V_RRESP;
input   m_axi_in_V_BVALID;
output   m_axi_in_V_BREADY;
input  [1:0] m_axi_in_V_BRESP;
input  [0:0] m_axi_in_V_BID;
input  [0:0] m_axi_in_V_BUSER;
input  [60:0] out_V3_dout;
input   out_V3_empty_n;
output   out_V3_read;
input  [31:0] numReps_channel22_dout;
input   numReps_channel22_empty_n;
output   numReps_channel22_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg memOutStrm_V_V_read;
reg m_axi_in_V_AWVALID;
reg[63:0] m_axi_in_V_AWADDR;
reg[0:0] m_axi_in_V_AWID;
reg[31:0] m_axi_in_V_AWLEN;
reg[2:0] m_axi_in_V_AWSIZE;
reg[1:0] m_axi_in_V_AWBURST;
reg[1:0] m_axi_in_V_AWLOCK;
reg[3:0] m_axi_in_V_AWCACHE;
reg[2:0] m_axi_in_V_AWPROT;
reg[3:0] m_axi_in_V_AWQOS;
reg[3:0] m_axi_in_V_AWREGION;
reg[0:0] m_axi_in_V_AWUSER;
reg m_axi_in_V_WVALID;
reg[63:0] m_axi_in_V_WDATA;
reg[7:0] m_axi_in_V_WSTRB;
reg m_axi_in_V_WLAST;
reg[0:0] m_axi_in_V_WID;
reg[0:0] m_axi_in_V_WUSER;
reg m_axi_in_V_BREADY;
reg out_V3_read;
reg numReps_channel22_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
wire    grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_blk_n;
reg    memOutStrm_V_V_blk_n;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] ap_CS_fsm_state10;
reg   [0:0] tmp_1_i_i_i_reg_158;
wire    grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_AW;
wire    grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_W;
wire    grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_B;
reg    in_V_blk_n_AW;
reg    in_V_blk_n_W;
reg    in_V_blk_n_B;
reg    out_V3_blk_n;
reg    numReps_channel22_blk_n;
reg   [60:0] out_V3_read_reg_135;
reg    ap_condition_148;
reg   [31:0] numReps_channel22_re_reg_141;
reg   [31:0] rep_load_reg_147;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] tmp_1_i_i_i_fu_101_p2;
wire   [0:0] tmp_i_i_i_fu_87_p2;
wire    grp_Stream2Mem_fu_58_ap_start;
wire    grp_Stream2Mem_fu_58_ap_done;
wire    grp_Stream2Mem_fu_58_ap_idle;
wire    grp_Stream2Mem_fu_58_ap_ready;
wire    grp_Stream2Mem_fu_58_in_V_V_read;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_AWVALID;
wire   [63:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWADDR;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWID;
wire   [31:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWLEN;
wire   [2:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWSIZE;
wire   [1:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWBURST;
wire   [1:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWLOCK;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWCACHE;
wire   [2:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWPROT;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWQOS;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWREGION;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_AWUSER;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_WVALID;
wire   [63:0] grp_Stream2Mem_fu_58_m_axi_out_V_WDATA;
wire   [7:0] grp_Stream2Mem_fu_58_m_axi_out_V_WSTRB;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_WLAST;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_WID;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_WUSER;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_ARVALID;
wire   [63:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARADDR;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARID;
wire   [31:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARLEN;
wire   [2:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARSIZE;
wire   [1:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARBURST;
wire   [1:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARLOCK;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARCACHE;
wire   [2:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARPROT;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARQOS;
wire   [3:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARREGION;
wire   [0:0] grp_Stream2Mem_fu_58_m_axi_out_V_ARUSER;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_RREADY;
wire    grp_Stream2Mem_fu_58_m_axi_out_V_BREADY;
wire    grp_Stream2Mem_64u_8u_s_fu_68_ap_start;
wire    grp_Stream2Mem_64u_8u_s_fu_68_ap_done;
wire    grp_Stream2Mem_64u_8u_s_fu_68_ap_idle;
wire    grp_Stream2Mem_64u_8u_s_fu_68_ap_ready;
wire    grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_read;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWVALID;
wire   [63:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWADDR;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWID;
wire   [31:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLEN;
wire   [2:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWSIZE;
wire   [1:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWBURST;
wire   [1:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLOCK;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWCACHE;
wire   [2:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWPROT;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWQOS;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWREGION;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWUSER;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WVALID;
wire   [63:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WDATA;
wire   [7:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WSTRB;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WLAST;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WID;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WUSER;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARVALID;
wire   [63:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARADDR;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARID;
wire   [31:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARLEN;
wire   [2:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARSIZE;
wire   [1:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARBURST;
wire   [1:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARLOCK;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARCACHE;
wire   [2:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARPROT;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARQOS;
wire   [3:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARREGION;
wire   [0:0] grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARUSER;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_RREADY;
wire    grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_BREADY;
reg    ap_reg_grp_Stream2Mem_fu_58_ap_start;
wire   [0:0] ap_CS_fsm_state11;
reg    ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start;
reg   [10:0] ap_NS_fsm;
wire   [0:0] ap_NS_fsm_state3;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state9;
reg   [31:0] rep_fu_42;
wire   [31:0] rep_2_fu_107_p2;
wire   [31:0] rep_1_fu_117_p2;
wire   [31:0] repsLeft_fu_92_p2;
wire   [3:0] tmp_fu_97_p1;
reg    ap_condition_388;
reg    ap_condition_400;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'b1;
#0 ap_reg_grp_Stream2Mem_fu_58_ap_start = 1'b0;
#0 ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start = 1'b0;
end

Stream2Mem grp_Stream2Mem_fu_58(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Stream2Mem_fu_58_ap_start),
    .ap_done(grp_Stream2Mem_fu_58_ap_done),
    .ap_idle(grp_Stream2Mem_fu_58_ap_idle),
    .ap_ready(grp_Stream2Mem_fu_58_ap_ready),
    .in_V_V_dout(memOutStrm_V_V_dout),
    .in_V_V_empty_n(memOutStrm_V_V_empty_n),
    .in_V_V_read(grp_Stream2Mem_fu_58_in_V_V_read),
    .m_axi_out_V_AWVALID(grp_Stream2Mem_fu_58_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(m_axi_in_V_AWREADY),
    .m_axi_out_V_AWADDR(grp_Stream2Mem_fu_58_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_Stream2Mem_fu_58_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_Stream2Mem_fu_58_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_Stream2Mem_fu_58_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_Stream2Mem_fu_58_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_Stream2Mem_fu_58_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_Stream2Mem_fu_58_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_Stream2Mem_fu_58_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_Stream2Mem_fu_58_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_Stream2Mem_fu_58_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_Stream2Mem_fu_58_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_Stream2Mem_fu_58_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(m_axi_in_V_WREADY),
    .m_axi_out_V_WDATA(grp_Stream2Mem_fu_58_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_Stream2Mem_fu_58_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_Stream2Mem_fu_58_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_Stream2Mem_fu_58_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_Stream2Mem_fu_58_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_Stream2Mem_fu_58_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_Stream2Mem_fu_58_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_Stream2Mem_fu_58_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_Stream2Mem_fu_58_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_Stream2Mem_fu_58_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_Stream2Mem_fu_58_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_Stream2Mem_fu_58_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_Stream2Mem_fu_58_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_Stream2Mem_fu_58_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_Stream2Mem_fu_58_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_Stream2Mem_fu_58_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_Stream2Mem_fu_58_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_Stream2Mem_fu_58_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(ap_const_lv64_0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'b0),
    .m_axi_out_V_RUSER(1'b0),
    .m_axi_out_V_RRESP(ap_const_lv2_0),
    .m_axi_out_V_BVALID(m_axi_in_V_BVALID),
    .m_axi_out_V_BREADY(grp_Stream2Mem_fu_58_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(m_axi_in_V_BRESP),
    .m_axi_out_V_BID(m_axi_in_V_BID),
    .m_axi_out_V_BUSER(m_axi_in_V_BUSER),
    .out_V3(out_V3_read_reg_135),
    .tmp_2(rep_load_reg_147)
);

Stream2Mem_64u_8u_s grp_Stream2Mem_64u_8u_s_fu_68(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Stream2Mem_64u_8u_s_fu_68_ap_start),
    .ap_done(grp_Stream2Mem_64u_8u_s_fu_68_ap_done),
    .ap_idle(grp_Stream2Mem_64u_8u_s_fu_68_ap_idle),
    .ap_ready(grp_Stream2Mem_64u_8u_s_fu_68_ap_ready),
    .in_V_V_dout(memOutStrm_V_V_dout),
    .in_V_V_empty_n(memOutStrm_V_V_empty_n),
    .in_V_V_read(grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_read),
    .m_axi_out_V_AWVALID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWVALID),
    .m_axi_out_V_AWREADY(m_axi_in_V_AWREADY),
    .m_axi_out_V_AWADDR(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWADDR),
    .m_axi_out_V_AWID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWID),
    .m_axi_out_V_AWLEN(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLEN),
    .m_axi_out_V_AWSIZE(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWSIZE),
    .m_axi_out_V_AWBURST(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWBURST),
    .m_axi_out_V_AWLOCK(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLOCK),
    .m_axi_out_V_AWCACHE(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWCACHE),
    .m_axi_out_V_AWPROT(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWPROT),
    .m_axi_out_V_AWQOS(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWQOS),
    .m_axi_out_V_AWREGION(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWREGION),
    .m_axi_out_V_AWUSER(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWUSER),
    .m_axi_out_V_WVALID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WVALID),
    .m_axi_out_V_WREADY(m_axi_in_V_WREADY),
    .m_axi_out_V_WDATA(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WDATA),
    .m_axi_out_V_WSTRB(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WSTRB),
    .m_axi_out_V_WLAST(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WLAST),
    .m_axi_out_V_WID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WID),
    .m_axi_out_V_WUSER(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WUSER),
    .m_axi_out_V_ARVALID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARVALID),
    .m_axi_out_V_ARREADY(1'b0),
    .m_axi_out_V_ARADDR(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARADDR),
    .m_axi_out_V_ARID(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARID),
    .m_axi_out_V_ARLEN(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARLEN),
    .m_axi_out_V_ARSIZE(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARSIZE),
    .m_axi_out_V_ARBURST(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARBURST),
    .m_axi_out_V_ARLOCK(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARLOCK),
    .m_axi_out_V_ARCACHE(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARCACHE),
    .m_axi_out_V_ARPROT(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARPROT),
    .m_axi_out_V_ARQOS(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARQOS),
    .m_axi_out_V_ARREGION(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARREGION),
    .m_axi_out_V_ARUSER(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_ARUSER),
    .m_axi_out_V_RVALID(1'b0),
    .m_axi_out_V_RREADY(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_RREADY),
    .m_axi_out_V_RDATA(ap_const_lv64_0),
    .m_axi_out_V_RLAST(1'b0),
    .m_axi_out_V_RID(1'b0),
    .m_axi_out_V_RUSER(1'b0),
    .m_axi_out_V_RRESP(ap_const_lv2_0),
    .m_axi_out_V_BVALID(m_axi_in_V_BVALID),
    .m_axi_out_V_BREADY(grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_BREADY),
    .m_axi_out_V_BRESP(m_axi_in_V_BRESP),
    .m_axi_out_V_BID(m_axi_in_V_BID),
    .m_axi_out_V_BUSER(m_axi_in_V_BUSER),
    .out_V3(out_V3_read_reg_135),
    .tmp_3(rep_load_reg_147),
    .in_V_V_blk_n(grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_blk_n),
    .out_V_blk_n_AW(grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_AW),
    .out_V_blk_n_W(grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_W),
    .out_V_blk_n_B(grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_B)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_fu_87_p2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (1'b1 == ap_NS_fsm_state3))) begin
            ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Stream2Mem_64u_8u_s_fu_68_ap_ready)) begin
            ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_Stream2Mem_fu_58_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2))) begin
            ap_reg_grp_Stream2Mem_fu_58_ap_start <= 1'b1;
        end else if ((1'b1 == grp_Stream2Mem_fu_58_ap_ready)) begin
            ap_reg_grp_Stream2Mem_fu_58_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & ~(1'b0 == grp_Stream2Mem_fu_58_ap_done))) begin
        rep_fu_42 <= rep_1_fu_117_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rep_fu_42 <= rep_2_fu_107_p2;
    end else if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_148 == 1'b1))) begin
        rep_fu_42 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_148 == 1'b1))) begin
        numReps_channel22_re_reg_141 <= numReps_channel22_dout;
        out_V3_read_reg_135 <= out_V3_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rep_load_reg_147 <= rep_fu_42;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2))) begin
        tmp_1_i_i_i_reg_158 <= tmp_1_i_i_i_fu_101_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_done_reg) | ((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_fu_87_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ~(1'b0 == tmp_i_i_i_fu_87_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)))) begin
        in_V_blk_n_AW = grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_AW;
    end else begin
        in_V_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)))) begin
        in_V_blk_n_B = grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_B;
    end else begin
        in_V_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)))) begin
        in_V_blk_n_W = grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_W;
    end else begin
        in_V_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWADDR = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWADDR;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWADDR = grp_Stream2Mem_fu_58_m_axi_out_V_AWADDR;
    end else begin
        m_axi_in_V_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWBURST = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWBURST;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWBURST = grp_Stream2Mem_fu_58_m_axi_out_V_AWBURST;
    end else begin
        m_axi_in_V_AWBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWCACHE = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWCACHE;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWCACHE = grp_Stream2Mem_fu_58_m_axi_out_V_AWCACHE;
    end else begin
        m_axi_in_V_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWID = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWID;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWID = grp_Stream2Mem_fu_58_m_axi_out_V_AWID;
    end else begin
        m_axi_in_V_AWID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWLEN = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLEN;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWLEN = grp_Stream2Mem_fu_58_m_axi_out_V_AWLEN;
    end else begin
        m_axi_in_V_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWLOCK = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWLOCK;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWLOCK = grp_Stream2Mem_fu_58_m_axi_out_V_AWLOCK;
    end else begin
        m_axi_in_V_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWPROT = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWPROT;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWPROT = grp_Stream2Mem_fu_58_m_axi_out_V_AWPROT;
    end else begin
        m_axi_in_V_AWPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWQOS = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWQOS;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWQOS = grp_Stream2Mem_fu_58_m_axi_out_V_AWQOS;
    end else begin
        m_axi_in_V_AWQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWREGION = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWREGION;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWREGION = grp_Stream2Mem_fu_58_m_axi_out_V_AWREGION;
    end else begin
        m_axi_in_V_AWREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWSIZE = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWSIZE;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWSIZE = grp_Stream2Mem_fu_58_m_axi_out_V_AWSIZE;
    end else begin
        m_axi_in_V_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWUSER = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWUSER;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWUSER = grp_Stream2Mem_fu_58_m_axi_out_V_AWUSER;
    end else begin
        m_axi_in_V_AWUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_AWVALID = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_AWVALID;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_AWVALID = grp_Stream2Mem_fu_58_m_axi_out_V_AWVALID;
    end else begin
        m_axi_in_V_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_BREADY = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_BREADY;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_BREADY = grp_Stream2Mem_fu_58_m_axi_out_V_BREADY;
    end else begin
        m_axi_in_V_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WDATA = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WDATA;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WDATA = grp_Stream2Mem_fu_58_m_axi_out_V_WDATA;
    end else begin
        m_axi_in_V_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WID = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WID;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WID = grp_Stream2Mem_fu_58_m_axi_out_V_WID;
    end else begin
        m_axi_in_V_WID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WLAST = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WLAST;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WLAST = grp_Stream2Mem_fu_58_m_axi_out_V_WLAST;
    end else begin
        m_axi_in_V_WLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WSTRB = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WSTRB;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WSTRB = grp_Stream2Mem_fu_58_m_axi_out_V_WSTRB;
    end else begin
        m_axi_in_V_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WUSER = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WUSER;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WUSER = grp_Stream2Mem_fu_58_m_axi_out_V_WUSER;
    end else begin
        m_axi_in_V_WUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state9))) begin
        m_axi_in_V_WVALID = grp_Stream2Mem_64u_8u_s_fu_68_m_axi_out_V_WVALID;
    end else if ((((1'b1 == ap_CS_fsm_state2) & (1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2)) | (1'b1 == ap_CS_fsm_state11))) begin
        m_axi_in_V_WVALID = grp_Stream2Mem_fu_58_m_axi_out_V_WVALID;
    end else begin
        m_axi_in_V_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state10) & (1'b0 == tmp_1_i_i_i_reg_158)))) begin
        memOutStrm_V_V_blk_n = grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_blk_n;
    end else begin
        memOutStrm_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        memOutStrm_V_V_read = grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_read;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        memOutStrm_V_V_read = grp_Stream2Mem_fu_58_in_V_V_read;
    end else begin
        memOutStrm_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        numReps_channel22_blk_n = numReps_channel22_empty_n;
    end else begin
        numReps_channel22_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_148 == 1'b1))) begin
        numReps_channel22_read = 1'b1;
    end else begin
        numReps_channel22_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~((ap_start == 1'b0) | (ap_done_reg == 1'b1)))) begin
        out_V3_blk_n = out_V3_empty_n;
    end else begin
        out_V3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_CS_fsm_state1 == 1'b1) & ~(ap_condition_148 == 1'b1))) begin
        out_V3_read = 1'b1;
    end else begin
        out_V3_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (~(ap_condition_148 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (~(1'b0 == tmp_i_i_i_fu_87_p2)) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b0 == tmp_i_i_i_fu_87_p2) & ~(1'b0 == tmp_1_i_i_i_fu_101_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (~(ap_condition_388 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (~(ap_condition_388 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (~(ap_condition_400 == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (~(1'b0 == grp_Stream2Mem_fu_58_ap_done)) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[ap_const_lv32_0];

assign ap_CS_fsm_state10 = ap_CS_fsm[ap_const_lv32_9];

assign ap_CS_fsm_state11 = ap_CS_fsm[ap_const_lv32_A];

assign ap_CS_fsm_state2 = ap_CS_fsm[ap_const_lv32_1];

assign ap_CS_fsm_state3 = ap_CS_fsm[ap_const_lv32_2];

assign ap_CS_fsm_state4 = ap_CS_fsm[ap_const_lv32_3];

assign ap_CS_fsm_state5 = ap_CS_fsm[ap_const_lv32_4];

assign ap_CS_fsm_state6 = ap_CS_fsm[ap_const_lv32_5];

assign ap_CS_fsm_state7 = ap_CS_fsm[ap_const_lv32_6];

assign ap_CS_fsm_state8 = ap_CS_fsm[ap_const_lv32_7];

assign ap_CS_fsm_state9 = ap_CS_fsm[ap_const_lv32_8];

assign ap_NS_fsm_state3 = ap_NS_fsm[ap_const_lv32_2];

always @ (*) begin
    ap_condition_148 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1) | (out_V3_empty_n == 1'b0) | (numReps_channel22_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_388 = ((grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_blk_n == 1'b0) | ((grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_AW & grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_W & grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_B) == 1'b0));
end

always @ (*) begin
    ap_condition_400 = ((1'b0 == tmp_1_i_i_i_reg_158) & ((grp_Stream2Mem_64u_8u_s_fu_68_in_V_V_blk_n == 1'b0) | ((grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_AW & grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_W & grp_Stream2Mem_64u_8u_s_fu_68_out_V_blk_n_B) == 1'b0)));
end

assign grp_Stream2Mem_64u_8u_s_fu_68_ap_start = ap_reg_grp_Stream2Mem_64u_8u_s_fu_68_ap_start;

assign grp_Stream2Mem_fu_58_ap_start = ap_reg_grp_Stream2Mem_fu_58_ap_start;

assign m_axi_in_V_ARADDR = ap_const_lv64_0;

assign m_axi_in_V_ARBURST = ap_const_lv2_0;

assign m_axi_in_V_ARCACHE = ap_const_lv4_0;

assign m_axi_in_V_ARID = 1'b0;

assign m_axi_in_V_ARLEN = ap_const_lv32_0;

assign m_axi_in_V_ARLOCK = ap_const_lv2_0;

assign m_axi_in_V_ARPROT = ap_const_lv3_0;

assign m_axi_in_V_ARQOS = ap_const_lv4_0;

assign m_axi_in_V_ARREGION = ap_const_lv4_0;

assign m_axi_in_V_ARSIZE = ap_const_lv3_0;

assign m_axi_in_V_ARUSER = 1'b0;

assign m_axi_in_V_ARVALID = 1'b0;

assign m_axi_in_V_RREADY = 1'b0;

assign rep_1_fu_117_p2 = (rep_load_reg_147 + ap_const_lv32_10);

assign rep_2_fu_107_p2 = (rep_load_reg_147 + ap_const_lv32_1);

assign repsLeft_fu_92_p2 = (numReps_channel22_re_reg_141 - rep_fu_42);

assign tmp_1_i_i_i_fu_101_p2 = ((tmp_fu_97_p1 == ap_const_lv4_0) ? 1'b1 : 1'b0);

assign tmp_fu_97_p1 = repsLeft_fu_92_p2[3:0];

assign tmp_i_i_i_fu_87_p2 = ((rep_fu_42 == numReps_channel22_re_reg_141) ? 1'b1 : 1'b0);

endmodule //Stream2Mem_Batch
